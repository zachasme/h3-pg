name: Test

on: [push]

jobs:
  installcheck:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        postgresql: [14, 13]
        ubuntu: [jammy, focal]
        arch: [amd64]
    steps:
      - uses: actions/checkout@v2
      - name: Login to repository
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin
      - name: Test
        run: docker run -v ${PWD}:/github/workspace ghcr.io/zachasme/h3-pg/test:${{ matrix.postgresql }}-${{ matrix.ubuntu }}-${{ matrix.arch }}

  extupgrade:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to repository
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin
      - name: Test
        run: docker run -v ${PWD}:/github/workspace ghcr.io/zachasme/h3-pg/test:14-jammy-amd64 "pg_validate_extupgrade --config h3/pg_validate_extupgrade.toml && pg_validate_extupgrade --config h3_postgis/pg_validate_extupgrade.toml"

  i386:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        postgresql: [12]
        ubuntu: [bionic]
        arch: [i386]
    steps:
      - uses: actions/checkout@v2
      - name: Login to repository
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin
      - name: Test
        run: docker run -v ${PWD}:/github/workspace ghcr.io/zachasme/h3-pg/test:${{ matrix.postgresql }}-${{ matrix.ubuntu }}-${{ matrix.arch }}

  docs:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: python -m pip install lark-parser
      - run: rm docs/api.md
      - run: make docs/api.md
      - run: git diff --exit-code docs
